---
- name:               Build APIC Configuration from Scratch
  hosts:              apic1
  connection:         local
  gather_facts:       no
  vars:
    apic_info:        &apic_info
      host:           "{{ apic_ip }}"
      username:       "{{ apic_username }}"
      password:       "{{ apic_password }}"

    shared_vars:
      descr:                    "Created by Ansible"

    vlan_pools:
      allocMode:                "static"
      vlanName:                 "all_vlans"
      vlanFrom:                 "vlan-2000"
      vlanTo:                   "vlan-2501"

    cdp_policy:
      adminSt:                  "enabled"
      cdpPolicyName:            "cdp-enabled"

    phys_dom:
      physDomName:              "physical_servers"

    aaep:
      aaepName:                 "all_vlans"

    intf_policies:
    - "ESX_Hosts"
    - "Linux_Hosts"
    - "Windows_Hosts"

    ifPolicyLeafProfileNames:
    - Leaf_101
    - Leaf_102
    - Leaf_103
    - Leaf_104
    - Leaf_105
    - Leaf_106
    - Leafs_101_and_102
    - Leafs_103_and_104
    - Leafs_105_and_106

    interfaceSelectors:
    - ifPolicyLeafProfileName: Leafs_101_and_102
      intf_policy: Linux_Hosts
      fromCard: '1'
      fromPort: '1'
      toCard: '1'
      toPort: '48'

    swPolicyLeafProfiles:
    - swPolicyLeafProfileName: Leaf_101
      leafName: Leaf-101
      leafId: '101'
    - swPolicyLeafProfileName: Leaf_102
      leafName: Leaf-102
      leafId: '102'
    - swPolicyLeafProfileName: Leaf_103
      leafName: Leaf-103
      leafId: '103'
    - swPolicyLeafProfileName: Leaf_104
      leafName: Leaf-104
      leafId: '104'
    - swPolicyLeafProfileName: Leaf_105
      leafName: Leaf-105
      leafId: '105'
    - swPolicyLeafProfileName: Leaf_106
      leafName: Leaf-106
      leafId: '106'
    - swPolicyLeafProfileName: Leafs_101_and_102
      leafName: Leaf-101
      leafId: '101'
    - swPolicyLeafProfileName: Leafs_101_and_102
      leafName: Leaf-102
      leafId: '102'
    - swPolicyLeafProfileName: Leafs_103_and_104
      leafName: Leaf-103
      leafId: '103'
    - swPolicyLeafProfileName: Leafs_103_and_104
      leafName: Leaf-104
      leafId: '104'
    - swPolicyLeafProfileName: Leafs_105_and_106
      leafName: Leaf-105
      leafId: '105'
    - swPolicyLeafProfileName: Leafs_105_and_106
      leafName: Leaf-106
      leafId: '106'

    vrfs:
    - tenantName: common
      vrfName: vrf-01

    bridgeDomains:
    - bdName: 192.168.100.0_24
      tenantName: common
      vrfName: vrf-01
    - bdName: 192.168.101.0_24
      tenantName: common
      vrfName: vrf-01

    bdSubnets:
    - bdName: 192.168.100.0_24
      tenantName: common
      gwAddress: 192.168.100.1
      mask: 24
    - bdName: 192.168.101.0_24
      tenantName: common
      gwAddress: 192.168.101.1
      mask: 24

    tenants:
    - tenantName: Demo

    appProfiles:
    - apName: WordPress
      tenantName: Demo

    epgs:
    - epgName: WebServers
      tenantName: Demo
      apName: WordPress
      bdName: 192.168.100.0_24
    - epgName: DbServers
      tenantName: Demo
      apName: WordPress
      bdName: 192.168.101.0_24

    staticPorts:
    - nodeID: 101
      path: eth1/11
      vlanID: 2011
      tenantName: Demo
      apName: WordPress
      epgName: WebServers
    - nodeID: 101
      path: eth1/12
      vlanID: 2012
      tenantName: Demo
      apName: WordPress
      epgName: WebServers
    - nodeID: 101
      path: eth1/13
      vlanID: 2013
      tenantName: Demo
      apName: WordPress
      epgName: DbServers

  tasks:

  # Create VLAN Pools
  - name:             Create VLAN Pools
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        fvnsVlanInstP:
          attributes:
            allocMode: "{{vlan_pools.allocMode}}"
            annotation: ''
            descr: "{{shared_vars.descr}}"
            dn: uni/infra/vlanns-[{{vlan_pools.vlanName}}]-static
            name: "{{vlan_pools.vlanName}}"
            nameAlias: ''
            ownerKey: ''
            ownerTag: ''
            status: created,modified
          children:
          - fvnsEncapBlk:
              attributes:
                allocMode: "{{vlan_pools.allocMode}}"
                annotation: ''
                descr: ''
                from: "{{vlan_pools.vlanFrom}}"
                name: ''
                nameAlias: ''
                role: external
                to: "{{vlan_pools.vlanTo}}"

  # Create CDP Policy
  - name:             Create CDP Policy
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        cdpIfPol:
          attributes:
            adminSt: "{{cdp_policy.adminSt}}"
            annotation: ''
            descr: "{{shared_vars.descr}}"
            dn: uni/infra/cdpIfP-{{cdp_policy.cdpPolicyName}}
            name: "{{cdp_policy.cdpPolicyName}}"
            nameAlias: ''
            ownerKey: ''
            ownerTag: ''
            status: created,modified

  # Create PhysDom
  - name:             Create Physical Domain
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        physDomP:
          attributes:
            annotation: ''
            dn: uni/phys-{{phys_dom.physDomName}}
            name: "{{phys_dom.physDomName}}"
            nameAlias: ''
            ownerKey: ''
            ownerTag: ''
            status: created,modified
          children:
          - infraRsVlanNs:
              attributes:
                annotation: ''
                tDn: uni/infra/vlanns-[{{vlan_pools.vlanName}}]-static

  # Create AAEP
  - name:             Create Attachable Access Entity Profile
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        infraInfra:
          attributes:
            dn: uni/infra
            status: created,modified
          children:
          - infraAttEntityP:
              attributes:
                dn: uni/infra/attentp-all_vlans
                name: "{{aaep.aaepName}}"
                descr: "{{shared_vars.descr}}"
                rn: attentp-{{aaep.aaepName}}
                status: created,modified
              children:
              - infraProvAcc:
                  attributes:
                    dn: uni/infra/attentp-{{aaep.aaepName}}/provacc
                    status: created,modified
                  children: []
              - infraRsDomP:
                  attributes:
                    tDn: uni/phys-{{phys_dom.physDomName}}
                    status: created,modified
                  children: []
          - infraFuncP:
              attributes:
                dn: uni/infra/funcprof
                status: created,modified
              children: []

  # Create Interface Policy Groups
  - name:             Create Interface Policy Groups
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        infraAccPortGrp:
          attributes:
            dn: uni/infra/funcprof/accportgrp-{{item}}
            name: "{{item}}"
            descr: "{{shared_vars.descr}}"
            rn: accportgrp-{{item}}
            status: created,modified
          children:
          - infraRsAttEntP:
              attributes:
                tDn: uni/infra/attentp-{{aaep.aaepName}}
                status: created,modified
              children: []
          - infraRsCdpIfPol:
              attributes:
                tnCdpIfPolName: "{{cdp_policy.cdpPolicyName}}"
                status: created,modified
              children: []
    with_items:
      "{{intf_policies}}"

  # Create Interface Policy Leaf Profiles
  - name:             Create Interface Policy Leaf Profiles
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        infraAccPortP:
          attributes:
            annotation: ''
            descr: "{{shared_vars.descr}}"
            dn: uni/infra/accportprof-{{item}}
            name: "{{item}}"
            nameAlias: ''
            ownerKey: ''
            ownerTag: ''
            status: created,modified
    with_items:
      "{{ifPolicyLeafProfileNames}}"
    loop_control:
      pause: .5

  # Create Interface Selectors
  - name:             Create Interface Selectors
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        infraHPortS:
          attributes:
            annotation: ''
            descr: ''
            dn: uni/infra/accportprof-{{item.ifPolicyLeafProfileName}}/hports-interfaces-typ-range
            name: interfaces
            nameAlias: ''
            ownerKey: ''
            ownerTag: ''
            type: range
            status: created,modified
          children:
          - infraRsAccBaseGrp:
              attributes:
                annotation: ''
                fexId: '101'
                tDn: uni/infra/funcprof/accportgrp-{{item.intf_policy}}
          - infraPortBlk:
              attributes:
                annotation: ''
                descr: ''
                fromCard: "{{item.fromCard}}"
                fromPort: "{{item.fromPort}}"
                name: block2
                nameAlias: ''
                toCard: "{{item.toCard}}"
                toPort: "{{item.toPort}}"
    with_items:
      "{{interfaceSelectors}}"
    loop_control:
      pause: .5

  # Create Switch Policy Leaf Profiles
  - name:             Create Switch Policy Leaf Profiles
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        infraNodeP:
          attributes:
            annotation: ''
            descr: "{{shared_vars.descr}}"
            dn: uni/infra/nprof-{{item.swPolicyLeafProfileName}}
            name: "{{item.swPolicyLeafProfileName}}"
            nameAlias: ''
            ownerKey: ''
            ownerTag: ''
            status: created,modified
          children:
          - infraRsAccPortP:
              attributes:
                annotation: ''
                tDn: uni/infra/accportprof-{{item.swPolicyLeafProfileName}}
          - infraLeafS:
              attributes:
                annotation: ''
                descr: "{{shared_vars.descr}}"
                name: "{{item.leafName}}"
                nameAlias: ''
                ownerKey: ''
                ownerTag: ''
                type: range
              children:
              - infraNodeBlk:
                  attributes:
                    annotation: ''
                    descr: "{{shared_vars.descr}}"
                    from_: "{{item.leafId}}"
                    name: ae13e494071b4fda
                    nameAlias: ''
                    to_: "{{item.leafId}}"
    with_items:
      "{{swPolicyLeafProfiles}}"
    loop_control:
      pause: .5

  - name: Create a New VRF
    aci_vrf:
      <<: *apic_info
      validate_certs: no
      vrf: "{{item.vrfName}}"
      tenant: "{{item.tenantName}}"
      policy_control_preference: enforced
      policy_control_direction: ingress
      state: present
    with_items:
      "{{vrfs}}"
    loop_control:
      pause: .5

  - name: Add Bridge Domain
    aci_bd:
      <<: *apic_info
      validate_certs: no
      tenant: "{{item.tenantName}}"
      bd: "{{item.bdName}}"
      vrf: "{{item.vrfName}}"
      state: present
    with_items:
      "{{bridgeDomains}}"
    loop_control:
      pause: .5

  - name: Create BD Subnet(s)
    aci_bd_subnet:
      <<: *apic_info
      validate_certs: no
      tenant: "{{item.tenantName}}"
      bd: "{{item.bdName}}"
      gateway: "{{item.gwAddress}}"
      mask: "{{item.mask}}"
      state: present
    with_items:
      "{{bdSubnets}}"
    loop_control:
      pause: .5

  - name: Create New Tenant(s)
    aci_tenant:
      <<: *apic_info
      validate_certs: no
      tenant: "{{item.tenantName}}"
      state: present
    with_items:
      "{{tenants}}"
    loop_control:
      pause: .5

  - name: Create a New App Profile
    aci_ap:
      <<: *apic_info
      validate_certs: no
      tenant: "{{item.tenantName}}"
      ap: "{{item.apName}}"
      state: present
    with_items:
      "{{appProfiles}}"
    loop_control:
      pause: .5

  - name: Create a New EPG
    aci_epg:
      <<: *apic_info
      validate_certs: no
      tenant: "{{item.tenantName}}"
      ap: "{{item.apName}}"
      epg: "{{item.epgName}}"
      bd: "{{item.bdName}}"
      state: present
    with_items:
      "{{epgs}}"
    loop_control:
      pause: .5

  - name: Add a new physical domain to EPG binding
    aci_epg_to_domain:
      <<: *apic_info
      validate_certs: no
      tenant: "{{item.tenantName}}"
      ap: "{{item.apName}}"
      epg: "{{item.epgName}}"
      domain: "{{phys_dom.physDomName}}"
      domain_type: phys
      state: present
    with_items:
      "{{epgs}}"
    loop_control:
      pause: .5

  # Create Static Ports
  - name:             Create Static Ports
    aci_rest:
      <<: *apic_info
      validate_certs: no
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        fvRsPathAtt:
          attributes:
            annotation: ''
            descr: ''
            dn: uni/tn-{{item.tenantName}}/ap-{{item.apName}}/epg-{{item.epgName}}/rspathAtt-[topology/pod-1/paths-{{item.nodeID}}/pathep-[{{item.path}}]]
            encap: vlan-{{item.vlanID}}
            instrImedcy: immediate
            mode: regular
            primaryEncap: unknown
            tDn: topology/pod-1/paths-{{item.nodeID}}/pathep-[{{item.path}}]
            status: created,modified
    with_items:
      "{{staticPorts}}"
    loop_control:
      pause: .5
